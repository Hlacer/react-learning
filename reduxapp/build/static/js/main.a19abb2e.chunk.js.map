{"version":3,"sources":["redux/actions/count.js","containers/count.jsx","containers/person.jsx","redux/actions/person.js","App.js","redux/reducers/person.js","redux/reducers/index.js","redux/reducers/count.js","redux/store.js","index.js"],"names":["createIncrementAction","data","type","Header","incrementa","value","selectNum","props","jia","Number","decrement","jian","ifAdd","count","asyncAdd","asyncjia","this","personcount","ref","c","onClick","Component","connect","state","persons","length","time","dispatch","setTimeout","Person","addPerson","name","nameNode","age","ageNode","personObj","id","nanoid","alert","addPersones","placeholder","personArr","map","p","App","initState","combineReducers","preState","action","createStore","allReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.a19abb2e.chunk.js","sourcesContent":["//同步action指的是 action值为object类型的一般对象\r\nexport const createIncrementAction = (data) =>({type:'incrementa',data:data})\r\n\r\nexport const createDecrementAction = (data) =>({type:'decrement',data:data})\r\n\r\n//异步action就是指action的值为函数\r\nexport const createDecrementAsyncAction = (data,time) =>{\r\n    return (dispatch)=>{\r\n        setTimeout(() =>{\r\n            //通知redux+data\r\n            dispatch(createIncrementAction(data)) //异步action中一般都会调用同步action，异步action不是必须用的\r\n        },time)\r\n    }\r\n}","import React,{ Component } from 'react'\r\nimport {connect} from 'react-redux' /*引入connect用于连接ui组件和redux*/\r\n/*引入action*/\r\nimport {\r\n    createIncrementAction,\r\n    createDecrementAction,\r\n    createDecrementAsyncAction\r\n} from '../redux/actions/count'\r\n\r\nclass Header extends Component{\r\n\r\n    incrementa = () =>{\r\n        const {value} = this.selectNum\r\n        // 通知redux+value\r\n        this.props.jia(Number(value))\r\n    }\r\n    decrement = () =>{\r\n        const {value} = this.selectNum\r\n        this.props.jian(Number(value))\r\n    }\r\n    ifAdd = () =>{\r\n        const {value} = this.selectNum\r\n        if(this.props.count %2 !==0){\r\n            this.props.jia(Number(value))\r\n        }\r\n    }\r\n    asyncAdd = () =>{\r\n        const {value} = this.selectNum\r\n        this.props.asyncjia(Number(value),500)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>count组件，person组件总人数为{this.props.personcount}</h1>\r\n                <h4>当前求和为{this.props.count}</h4>\r\n                <select ref={c=>this.selectNum = c}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                </select>\r\n                <br/>\r\n                <button onClick={this.incrementa}>加</button>&nbsp;\r\n                <button onClick={this.decrement}>减</button>&nbsp;\r\n                <button onClick={this.ifAdd}>当前求和为奇数再加</button>&nbsp;\r\n                <button onClick={this.asyncAdd}>异步加</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state =>({\r\n        count: state.count,\r\n        personcount:state.persons.length\r\n    }),\r\n    {\r\n        jia:createIncrementAction,\r\n        jian:createDecrementAction,\r\n        asyncjia:createDecrementAsyncAction\r\n    }\r\n)(Header)  /*connect的返回值依旧是函数*/","import React,{ Component } from 'react'\r\nimport {nanoid} from 'nanoid'\r\nimport {connect} from 'react-redux'\r\nimport {createAddPerson} from '../redux/actions/person'\r\nclass Person extends Component{\r\n    addPerson = () =>{\r\n        const name = this.nameNode.value\r\n        const age = this.ageNode.value\r\n        const personObj = {id:nanoid(),name:name,age:age}\r\n        if (this.nameNode.value === '' || this.ageNode.value === ''){\r\n            alert('请输入内容')\r\n        }else{\r\n            this.props.addPersones(personObj)\r\n            this.nameNode.value = ''\r\n            this.ageNode.value = ''\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>person组件，count组件求和为{this.props.count}</h1>\r\n                <input type=\"text\" ref={c=>this.nameNode=c} placeholder='输入名字'/>&nbsp;&nbsp;\r\n                <input type=\"text\" ref={c=>this.ageNode=c} placeholder='输入年龄'/>&nbsp;&nbsp;\r\n                <button onClick={this.addPerson}>添加</button>\r\n                <br/>\r\n                <ul>\r\n                    {\r\n                        this.props.personArr.map((p)=>{\r\n                            return (\r\n                                <li key={p.id}>{p.name}------{p.age}</li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state =>({\r\n        count: state.count,\r\n        personArr:state.persons\r\n    }),\r\n    {addPersones:createAddPerson}\r\n)(Person)","export const createAddPerson = (personObj) =>({type:'addPerson',data:personObj}) /*创建一个增加人的action*/","import React, {Component} from 'react';\nimport Header from './containers/count'/*引入count的容器组件*/\nimport Person from './containers/person'/*引入person的容器组件*/\nexport default class App extends Component {\n    render() {\n        return (\n            <div>\n              <Header/>\n              <hr/>\n              <Person/>\n            </div>\n        );\n    }\n}\n\n","/*初始化人的列表*/\r\nconst initState = [{id:'01',name:'tom',age:'18'}]\r\nexport default function personReducer(preState=initState,action){\r\n    const {type,data} = action\r\n    switch (type){\r\n        case 'addPerson':  //如果添加一个人\r\n            return [data,...preState]\r\n        default:\r\n            return preState\r\n    }\r\n}","/*\r\n* 该文件用于汇总所有的reducer作为一个总的reducer\r\n*/\r\nimport {combineReducers} from 'redux' /*用于汇总多个reducer*/\r\nimport countReducer from './count' /*引入为cont组件服务的reducer*/\r\nimport personReducer from \"./person\";/*引入为person组件服务的reducer*/\r\n\r\n\r\n/*合并所有reducer变为一个总的reducer，，，，传入的对象就是redux保存的总状态对象*/\r\nexport default combineReducers({\r\n    count:countReducer,\r\n    persons:personReducer\r\n})\r\n\r\n","/*\r\n*    该文件用于创建一个为count组件服务的reducer,reducer的本质就是一个函数\r\n*    reducer接收两个参数====> 之前的状态,动作对象\r\n*/\r\nconst initState = 0\r\nexport default function countReducer(preState=initState,action){\r\n    //从action对象获取type和data\r\n    const {type,data} = action\r\n    //根据type决定如何加工数据\r\n    switch (type) {\r\n        case 'incrementa':\r\n            return preState + data\r\n        case 'decrement':\r\n            return preState - data\r\n        default:\r\n            return preState\r\n    }\r\n}","/*\r\n*该文件专门用于暴露一个store对象,整个应用只有一个store对象\r\n*/\r\nimport {createStore,applyMiddleware} from 'redux' /*引入方法,专门创建redux中最核心的store对象*/\r\n/*引入汇总之后的reducer*/\r\nimport allReducer from './reducers/index'\r\nimport thunk from \"redux-thunk\";/*用于支持异步action*/\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"; /*使用开发者工具*/\r\n\r\n\r\n/*暴露store    applyMiddleware(thunk)*/\r\nexport default createStore(allReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from \"./redux/store\";\nimport {Provider} from 'react-redux' /*此处需要用provider包裹app,目的是让app的后代容器组件都能接收到store,不用一个一个写*/\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}